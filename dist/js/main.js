"use strict";function e(e,n){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=function(e,n){if(!e)return;if("string"==typeof e)return t(e,n);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return t(e,n)}(e))||n&&e&&"number"==typeof e.length){r&&(e=r);var a=0,i=function(){};return{s:i,n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,s=!0,c=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return s=e.done,e},e:function(e){c=!0,o=e},f:function(){try{s||null==r.return||r.return()}finally{if(c)throw o}}}}function t(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var n,r,a,i,o=[{question:"Для чего Вы ищете онлайн курс по альтернативной истории?",answers:[{"Скучно, ищу что-то интересное и необычное":!1},{"Хочу узнать историческую правду":!1},{"Нам врали в школе, надо разобраться":!1},{"Американцы не летали на Луну":!1},{"Хочу потренироваться в определении идиотов":!1}]},{question:"Кем Вы являетесь в контексте текущего образования?",answers:[{"Школьник разных классов":!1},{"Студент определённого уровня":!1},{"Образование в прошлом":!1},{"Энное высшее":!1},{"Грызу и дальше":!1}]},{question:"Кем Вы себя ощущаете на просторах интернета?",answers:[{"Школота":!1},{"Стьюдент":!1},{"Диванный эксперт":!1},{"Полевой эксперт":!1},{"Точно всё не знаю":!1},{"Знаю всё, но не точно":!1}]},{question:"Какие вопросы альтернативной истории для Вас наиболее интересны?",answers:[{'"Полёты" на Луну снимал Стенли Кубрик в кинопавильоне на Земле?':!1},{"Почему скрывают катаклизм 19 века который засыпал здания по всему миру?":!1},{"Почему рухнул небоскрёб в который не попадал самолёт 11 сентября 2001 года?":!1},{"Монферран не мог сделать Александровскую колонну, она стояла до него?":!1},{"Антарктида, НЛО и немцы: кто напал на американцев в 1946-47 гг?":!1},{"Санкт-Петербург Пётр I не основал, а откопал?":!1}]},{question:'Знаете ли Вы канал "Песчаный Воин V" на Дзене?',answers:[{"Да, читал, но не согласен":!1},{"Да, подписан, поддерживаю":!1},{"Песчаный Воин - идиот":!1},{"Песчаный Воин - кто это?":!1}]}],s=[{name:'"Лунная афёра"',image:"./images/moon.png",link:"https://dzen.ru/suite/08067b75-a7ac-46e7-8a4c-72882f69a1b8?share_to=link"},{name:'"Засыпанные" здания по всему миру',image:"./images/building.png",link:"https://dzen.ru/suite/08067b75-a7ac-46e7-8a4c-72882f69a1b8?share_to=link"},{name:"11 сентября 2001 года",image:"./images/911.png",link:"https://dzen.ru/suite/92002a01-70b2-4671-9582-9e2d4877b41e?share_to=link"},{name:'"Украденная" история человечества',image:"./images/history.png",link:"https://dzen.ru/suite/bad5d39b-bf6f-4f91-9c8a-813724dc73b9?share_to=link"}],c=document.querySelector("#quiz"),u=document.createElement("button"),l=document.createElement("button"),d=document.createElement("p"),b=0;function m(e){return document.querySelector(".quiz-box__desc-steps").textContent="".concat(o.length),d.textContent="Шаг ".concat(e+1,"/").concat(o.length),d.classList.add("quiz-box__steps"),d}function f(t){var n=document.createElement("h2"),r=document.createElement("ul"),a=m(b);if(r.classList.add("quiz-box__list"),n.setAttribute("id","question"),n.classList.add("quiz-box__question"),n.textContent=t.question,b===t.length-1){var i=document.createElement("a"),o=document.createElement("img");i.setAttribute("href","https://dzen.ru/voinv"),i.setAttribute("target","_blank"),i.setAttribute("title","Перейти на канал Дзена"),i.classList.add("quiz-box__question-author"),o.setAttribute("src","../images/author.png"),i.append(o),n.append(i)}var s,d=0,f=e(t.answers);try{for(f.s();!(s=f.n()).done;){var _=s.value;r.append(p(Object.keys(_),d,Object.values(_))),d++}}catch(e){f.e(e)}finally{f.f()}return c.append(n),c.append(a),c.append(r),u.classList.add("quiz-box__button","next"),u.setAttribute("id","forward"),u.setAttribute("disabled",""),l.classList.add("quiz-box__button","prev"),l.setAttribute("id","back"),u.textContent="Далее",l.textContent="Назад",c.append(u),c.append(l),c}function p(e,t,n){var r=document.createElement("li"),a=document.createElement("input"),i=document.createElement("label");return r.classList.add("quiz-box__item"),a.classList.add("quiz-box__input"),console.log(b),3===b?a.setAttribute("type","checkbox"):a.setAttribute("type","radio"),a.setAttribute("name","answer"),a.setAttribute("id","".concat(t)),i.classList.add("quiz-box__label"),i.setAttribute("for","".concat(t)),i.setAttribute("id","answer_".concat(t)),i.textContent=e,"true"!=(n=String(n))||a.setAttribute("checked",""),r.append(a),r.append(i),r}function _(){0===b&&(document.getElementById("back").style.display="none")}function g(){c.innerHTML="",f(o[b]),h()}g(),_();var y=document.querySelector(".next");function h(){return document.querySelectorAll(".quiz-box__input").forEach((function(e){e.addEventListener("click",(function(e){y.removeAttribute("disabled"),r=e.currentTarget.id,void 0===n&&(n=r),(a=o[b].answers[r])[Object.keys(a)]=!0,console.log(n),console.log(r),r!=n?(i=o[b].answers[n])[Object.keys(i)]=3===b:(i=o[b].answers[n],3===b&&(i[Object.keys(i)]=!1)),n=r,console.log(o[b].answers)}))})),n}function q(e){var t=document.createElement("li"),n=document.createElement("a"),r=document.createElement("figure"),a=document.createElement("img"),i=document.createElement("figcature"),o=document.querySelector(".quiz-box__list");return t.classList.add("quiz-box__item"),n.classList.add("quiz-box__link"),n.setAttribute("href","".concat(e.link)),n.setAttribute("title","".concat(e.name)),n.setAttribute("target","_blank"),r.classList.add("quiz-box__figure"),i.classList.add("quiz-box__figcapture"),i.textContent="".concat(e.name),a.classList.add("quiz-box__image"),a.setAttribute("src","".concat(e.image)),r.append(a),r.append(i),n.append(r),t.append(n),o.append(t),o}u.addEventListener("click",(function(){if(h())if(b++,document.getElementById("back").removeAttribute("style"),b<o.length){g();var t=o[b].answers;console.log(t);var n,r=e(t);try{for(r.s();!(n=r.n()).done;){var a=n.value;console.log(a),a[Object.keys(a)]&&y.removeAttribute("disabled")}}catch(e){r.e(e)}finally{r.f()}}else c.innerHTML='<h2 class="quiz-box__question">Рекомендуем Вам записаться на следующие курсы:</h2>\n            <button class="quiz-box__button button-result" onclick="location.reload()">По-новой</button>\n            <ul class="quiz-box__list"></ul>',function(e){var t=e[3].answers,n=0;t.forEach((function(e){if(e=e[Object.keys(e)])switch(n){case 0:q(s[0]);break;case 1:q(s[1]);break;case 2:q(s[2]);break;case 3:q(s[3])}n++}))}(o)})),l.addEventListener("click",(function(){b--,_(),g(),y.removeAttribute("disabled")}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
