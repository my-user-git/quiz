"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.quizData=exports.dataImage=void 0;exports.quizData=[{question:"Для чего Вы ищете онлайн курс по альтернативной истории?",answers:[{"Скучно, ищу что-то интересное и необычное":!1},{"Хочу узнать историческую правду":!1},{"Нам врали в школе, надо разобраться":!1},{"Американцы не летали на Луну":!1},{"Хочу потренироваться в определении идиотов":!1}]},{question:"Кем Вы являетесь в контексте текущего образования?",answers:[{"Школьник разных классов":!1},{"Студент определённого уровня":!1},{"Образование в прошлом":!1},{"Энное высшее":!1},{"Грызу и дальше":!1}]},{question:"Кем Вы себя ощущаете на просторах интернета?",answers:[{"Школота":!1},{"Стьюдент":!1},{"Диванный эксперт":!1},{"Полевой эксперт":!1},{"Точно всё не знаю":!1},{"Знаю всё, но не точно":!1}]},{question:"Какие вопросы альтернативной истории для Вас наиболее интересны?",answers:[{'"Полёты" на Луну снимал Стенли Кубрик в кинопавильоне на Земле?':!1},{"Почему скрывают катаклизм 19 века который засыпал здания по всему миру?":!1},{"Почему рухнул небоскрёб в который не попадал самолёт 11 сентября 2001 года?":!1},{"Монферран не мог сделать Александровскую колонну, она стояла до него?":!1},{"Антарктида, НЛО и немцы: кто напал на американцев в 1946-47 гг?":!1},{"Санкт-Петербург Пётр I не основал, а откопал?":!1}]},{question:'Знаете ли Вы канал "Песчаный Воин V" на Дзене?',answers:[{"Да, читал, но не согласен":!1},{"Да, подписан, поддерживаю":!1},{"Песчаный Воин - идиот":!1},{"Песчаный Воин - кто это?":!1}]}];exports.dataImage=[{name:'"Лунная афёра"',image:"./images/moon.png",link:"https://dzen.ru/suite/08067b75-a7ac-46e7-8a4c-72882f69a1b8?share_to=link"},{name:'"Засыпанные" здания по всему миру',image:"./images/building.png",link:"https://dzen.ru/suite/08067b75-a7ac-46e7-8a4c-72882f69a1b8?share_to=link"},{name:"11 сентября 2001 года",image:"./images/911.png",link:"https://dzen.ru/suite/92002a01-70b2-4671-9582-9e2d4877b41e?share_to=link"},{name:'"Украденная" история человечества',image:"./images/history.png",link:"https://dzen.ru/suite/bad5d39b-bf6f-4f91-9c8a-813724dc73b9?share_to=link"}];
"use strict";var t=require("./data.js");function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},e(t)}function n(t,e){var n="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!n){if(Array.isArray(t)||(n=function(t,e){if(!t)return;if("string"==typeof t)return r(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);"Object"===n&&t.constructor&&(n=t.constructor.name);if("Map"===n||"Set"===n)return Array.from(t);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return r(t,e)}(t))||e&&t&&"number"==typeof t.length){n&&(t=n);var a=0,o=function(){};return{s:o,n:function(){return a>=t.length?{done:!0}:{done:!1,value:t[a++]}},e:function(t){throw t},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,u=!0,c=!1;return{s:function(){n=n.call(t)},n:function(){var t=n.next();return u=t.done,t},e:function(t){c=!0,i=t},f:function(){try{u||null==n.return||n.return()}finally{if(c)throw i}}}}function r(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function a(t){if("function"!=typeof WeakMap)return null;var e=new WeakMap,n=new WeakMap;return(a=function(t){return t?n:e})(t)}var o,i,u,c,s=await Promise.resolve().then((function(){return function(t,n){if(!n&&t&&t.__esModule)return t;if(null===t||"object"!==e(t)&&"function"!=typeof t)return{default:t};var r=a(n);if(r&&r.has(t))return r.get(t);var o={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in t)if("default"!==u&&Object.prototype.hasOwnProperty.call(t,u)){var c=i?Object.getOwnPropertyDescriptor(t,u):null;c&&(c.get||c.set)?Object.defineProperty(o,u,c):o[u]=t[u]}return o.default=t,r&&r.set(t,o),o}(require("./data.js"))})),l=document.querySelector("#quiz"),d=document.createElement("button"),b=document.createElement("button"),f=document.createElement("p"),m=0;function p(e){return document.querySelector(".quiz-box__desc-steps").textContent="".concat(t.quizData.length),f.textContent="Шаг ".concat(e+1,"/").concat(t.quizData.length),f.classList.add("quiz-box__steps"),f}function y(t){var e=document.createElement("h2"),r=document.createElement("ul"),a=p(m);if(r.classList.add("quiz-box__list"),e.setAttribute("id","question"),e.classList.add("quiz-box__question"),e.textContent=t.question,m===s.quizData.length-1){var o=document.createElement("a"),i=document.createElement("img");o.setAttribute("href","https://dzen.ru/voinv"),o.setAttribute("target","_blank"),o.setAttribute("title","Перейти на канал Дзена"),o.classList.add("quiz-box__question-author"),i.setAttribute("src","./images/author.png"),o.append(i),e.append(o)}var u,c=0,f=n(t.answers);try{for(f.s();!(u=f.n()).done;){var y=u.value;r.append(_(Object.keys(y),c,Object.values(y))),c++}}catch(t){f.e(t)}finally{f.f()}return l.append(e),l.append(a),l.append(r),d.classList.add("quiz-box__button","next"),d.setAttribute("id","forward"),d.setAttribute("disabled",""),b.classList.add("quiz-box__button","prev"),b.setAttribute("id","back"),d.textContent="Далее",b.textContent="Назад",l.append(d),l.append(b),l}function _(t,e,n){var r=document.createElement("li"),a=document.createElement("input"),o=document.createElement("label");return r.classList.add("quiz-box__item"),a.classList.add("quiz-box__input"),console.log(m),3===m?a.setAttribute("type","checkbox"):a.setAttribute("type","radio"),a.setAttribute("name","answer"),a.setAttribute("id","".concat(e)),o.classList.add("quiz-box__label"),o.setAttribute("for","".concat(e)),o.setAttribute("id","answer_".concat(e)),o.textContent=t,"true"!=(n=String(n))||a.setAttribute("checked",""),r.append(a),r.append(o),r}function q(){0===m&&(document.getElementById("back").style.display="none")}function v(){l.innerHTML="",y(t.quizData[m]),z()}v(),q();var g=document.querySelector(".next");function z(){return document.querySelectorAll(".quiz-box__input").forEach((function(e){e.addEventListener("click",(function(e){g.removeAttribute("disabled"),i=e.currentTarget.id,void 0===o&&(o=i),(u=t.quizData[m].answers[i])[Object.keys(u)]=!0,console.log(o),console.log(i),i!=o?(c=t.quizData[m].answers[o])[Object.keys(c)]=3===m:(c=t.quizData[m].answers[o],3===m&&(c[Object.keys(c)]=!1)),o=i,console.log(t.quizData[m].answers)}))})),o}function h(t){var e=document.createElement("li"),n=document.createElement("a"),r=document.createElement("figure"),a=document.createElement("img"),o=document.createElement("figcature"),i=document.querySelector(".quiz-box__list");return e.classList.add("quiz-box__item"),n.classList.add("quiz-box__link"),n.setAttribute("href","".concat(t.link)),n.setAttribute("title","".concat(t.name)),n.setAttribute("target","_blank"),r.classList.add("quiz-box__figure"),o.classList.add("quiz-box__figcapture"),o.textContent="".concat(t.name),a.classList.add("quiz-box__image"),a.setAttribute("src","".concat(t.image)),r.append(a),r.append(o),n.append(r),e.append(n),i.append(e),i}d.addEventListener("click",(function(){var e,r,a;if(z())if(m++,document.getElementById("back").removeAttribute("style"),m<t.quizData.length){v();var o=t.quizData[m].answers;console.log(o);var i,u=n(o);try{for(u.s();!(i=u.n()).done;){var c=i.value;console.log(c),c[Object.keys(c)]&&g.removeAttribute("disabled")}}catch(t){u.e(t)}finally{u.f()}}else l.innerHTML='<h2 class="quiz-box__question">Рекомендуем Вам записаться на следующие курсы:</h2>\n            <button class="quiz-box__button button-result" onclick="location.reload()">По-новой</button>\n            <ul class="quiz-box__list"></ul>',e=t.quizData,r=e[3].answers,a=0,r.forEach((function(e){if(e=e[Object.keys(e)])switch(a){case 0:h(t.dataImage[0]);break;case 1:h(t.dataImage[1]);break;case 2:h(t.dataImage[2]);break;case 3:h(t.dataImage[3])}a++}))})),b.addEventListener("click",(function(){m--,q(),v(),g.removeAttribute("disabled")}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
